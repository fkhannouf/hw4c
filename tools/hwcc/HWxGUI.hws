;;; draws the GUI depending on HW version
Function drawHWxGUI(ver$)
    ; contains all plattforms that are supported by the specific HW version
    m_tSupportedPlatforms = {}

    If ver$ = "3"
        drawHW3GUI()
    ElseIf ver$ = "4"
        drawHW4GUI()
    EndIf

    ; would be better to have it in hwcc.hws::getDefaultBGColor()
    Local opts = scui.Get("optTargetOS")
    Global m_tOptColor = {}
    m_tOptColor = opts.pswitch.Colors.Fill1
EndFunction
;;;

;;; draws the GUI for HW4 support
Function drawHW4GUI()
    ;DebugPrint("HW4")
    m_tSupportedPlatforms = {
        "AmigaOS 3",
        "AmigaOS 4",
        "WarpOS",
        "MorphOS",
        "AROS",
        "Windows",
        "MacOS",
        "MacOS (Intel)",
        "Applet"
    }

    m_tCompilePlatform = {
        "classic",
        "amigaos4",
        "warpos",
        "morphos",
        "aros",
        "win32",
        "macos",
        "macos86",
        "applet"
    }

; group for label and options "target platform(s)"
scui.NewObject(
    #IFOCLASS_BEVELBOX,
    "bvlTargetOS",
    { x = 5, y = 151 },
    { x = 225, y = 170 }
)

; label for choosing target platform(s)
scui.NewObject(
    #IFOCLASS_LABEL,
    "lblTargetOS",
    { x = 9, y = 155 },
    { x = 216, y = 20 },
    nil,
    { Values = { "Choose your target platform(s):" },
    Lines = 1 }
)

; options for choosing target platform(s)
scui.NewObject(
    #IFOCLASS_OPTIONS,
    "optTargetOS",
    { x = 9, y = 180 },
    { x = 214, y = 100 },
    nil,
    { Rows = 5,
      Columns = 2,
      Mode = #OPTMODE_FREE,
      Options = m_tSupportedPlatforms,
      DefaultOptions = { osId$ },
      SwitchWidth = 20,
      SwitchPosition = #OPT_LEFTSWITCH,
      SwitchMode = #OPTSWITCH_FULLWIDTH
    }
)

; options for selecting/deselecting all target platform options
scui.NewObject(
    #IFOCLASS_OPTIONS,
    "optDeSelTargetOS",
    { x = 9, y = 290 },
    { x = 214, y = 25 },
    nil,
    { Rows = 1,
      Columns = 2,
      Mode = #OPTMODE_ONLYONE,
      Options = { "Select all",
                  "Deselect all" },
      DefaultOptions = { }, ; nothing should be preselected
      SwitchWidth = 20,
      SwitchPosition = #OPT_LEFTSWITCH,
      SwitchMode = #OPTSWITCH_FULLWIDTH },
    { OnChanged = deSelectTargetOSOpt }
)
EndFunction
;;;

;;; draws the GUI for HW3 support
Function drawHW3GUI()
    m_tSupportedPlatforms = {
        "AmigaOS 3",
        "AmigaOS 4",
        "WarpOS",
        "MorphOS",
        "AROS",
        "Windows",
        "MacOS",
        "Applet"
    }

    m_tCompilePlatform = {
        "classic",
        "amigaos4",
        "warpos",
        "morphos",
        "aros",
        "win32",
        "macos",
        "applet"
    }


; group for label and options "target platform(s)"
scui.NewObject(
    #IFOCLASS_BEVELBOX,
    "bvlTargetOS",
    { x = 5, y = 151 },
    { x = 225, y = 170 }
)

; label for choosing target platform(s)
scui.NewObject(
    #IFOCLASS_LABEL,
    "lblTargetOS",
    { x = 9, y = 155 },
    { x = 216, y = 20 },
    nil,
    { Values = { "Choose your target platform(s):" },
    Lines = 1 }
)

; options for choosing target platform(s)
scui.NewObject(
    #IFOCLASS_OPTIONS,
    "optTargetOS",
    { x = 9, y = 180 },
    { x = 214, y = 100 },
    nil,
    { Rows = 4,
      Columns = 2,
      Mode = #OPTMODE_FREE,
      Options = m_tSupportedPlatforms,
      DefaultOptions = { osId$ },
      SwitchWidth = 20,
      SwitchPosition = #OPT_LEFTSWITCH,
      SwitchMode = #OPTSWITCH_FULLWIDTH
    }
)

; options for selecting/deselecting all target platform options
scui.NewObject(
    #IFOCLASS_OPTIONS,
    "optDeSelTargetOS",
    { x = 9, y = 290 },
    { x = 214, y = 25 },
    nil,
    { Rows = 1,
      Columns = 2,
      Mode = #OPTMODE_ONLYONE,
      Options = { "Select all",
                  "Deselect all" },
      DefaultOptions = { }, ; nothing should be preselected
      SwitchWidth = 20,
      SwitchPosition = #OPT_LEFTSWITCH,
      SwitchMode = #OPTSWITCH_FULLWIDTH },
    { OnChanged = deSelectTargetOSOpt }
)
EndFunction
;;;
